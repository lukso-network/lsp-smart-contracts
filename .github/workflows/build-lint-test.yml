# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
name: Node.js CI - Build + Lint + Test

on: pull_request

jobs:
  build-lint-test:
    permissions:
      # Default permissions (matching what would be set if the permissions section was missing at all)
      contents: read
      packages: read

      # Need to add these 2 for eslint-annotate-action
      pull-requests: write
      checks: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
      - name: Use Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: "22.18.0"
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run Solidity Linter
        id: solhint
        run: |
          # Run lint and save output to a file
          npm run lint:solidity > solhint-output.txt || echo "Lint failed" >> solhint-output.txt
          cat solhint-output.txt

      - name: 💬 Update PR Comment with Solhint Output
        uses: actions/github-script@v7
        with:
          script: |
            // Build the TS script
            const { build } = require("unbuild");
            await build("./.github/scripts", false, {entries: ["./parseSolhintOutput.ts"], outDir: "./"});
            // Run the script
            const { githubScript: parseSolhintOutput } = require("./.github/scripts/parseSolhintOutput.mjs");
            await parseSolhintOutput({github, context});

      - name: 💾 Save Code Linting Report JSON
        run: npm run lint:report
        continue-on-error: true

      - name: 💬 Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@v3
        with:
          report-json: "packages/*/eslint_report.json"
          only-pr-files: false
          fail-on-warning: true
          markdown-report-on-step-summary: true

      # - name: 🎨 Run ESLint on JS/TS files
      #   run: npm run lint

      # This will also generate the Typechain types and the files with the constants used by the Chai tests
      # The turbo configs in `turbo.json` is setup to run `npm run build` command first before `npm run build:js`.
      # Also test to generate the typed ABIs with `npm run build:types` to ensure the `release.yml` workflow will pass successfully.
      - name: 🏗️ Build contract artifacts
        run: |
          npm run build
          npm run build:types
          npm run build:js

      # - name: 📚 generate ABI docs
      #   run: npm run build:docs

      # - name: 🔍 check if ABI auto-generated docs need to be updated
      #   run: |-
      #     if [[ $(git diff --name-only) != "" ]];
      #     then
      #       echo "Error: Please generate ABI docs after making changes to Solidity code and Natspec comments!"
      #       exit 1
      #     fi

      - name: 🧪 Run tests for each package
        run: npm run test
